#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Telegram —á–∞—Ç–æ–≤
"""

import asyncio
import logging
from datetime import datetime, timedelta
from typing import List, Dict, Optional
from telegram import Bot, Update, Message
from telegram.ext import Application
from database import DatabaseManager
from text_analyzer import TextAnalyzer

logger = logging.getLogger(__name__)

class TelegramHistoryCollector:
    def __init__(self, db: DatabaseManager, text_analyzer: TextAnalyzer, bot_token: str):
        self.bot_token = bot_token
        self.db = db
        self.text_analyzer = text_analyzer
        self.bot = Bot(token=bot_token)
        
    async def collect_real_chat_history(self, chat_id: int, days: int = 45, progress_callback=None) -> Dict:
        """–°–æ–±–∏—Ä–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
        
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∞
        start_date = datetime.now() - timedelta(days=days)
        
        try:
            # –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ
            if progress_callback:
                await progress_callback("üîç –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ...")
            
            chat_info = await self.bot.get_chat(chat_id)
            chat_title = chat_info.title if hasattr(chat_info, 'title') else f"–ß–∞—Ç {chat_id}"
            
            if progress_callback:
                await progress_callback(f"üìã –ß–∞—Ç: {chat_title}\nüìÖ –ü–µ—Ä–∏–æ–¥: {start_date.strftime('%d.%m.%Y')} - {datetime.now().strftime('%d.%m.%Y')}")
            
            # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
            if progress_callback:
                await progress_callback("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ...")
            
            existing_messages = self.db.get_messages_for_period(chat_id, days)
            existing_count = len(existing_messages)
            
            if existing_count > 0:
                if progress_callback:
                    await progress_callback(f"üìä –ù–∞–π–¥–µ–Ω–æ {existing_count} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                users_found = set()
                for message in existing_messages:
                    if message.get('user_id'):
                        users_found.add(message['user_id'])
                
                if progress_callback:
                    await progress_callback(f"üë• –ù–∞–π–¥–µ–Ω–æ {len(users_found)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                
                # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                if existing_count >= 5:
                    if progress_callback:
                        await progress_callback("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã")
                    
                    return {
                        'chat_id': chat_id,
                        'chat_title': chat_title,
                        'messages_collected': existing_count,
                        'users_found': len(users_found),
                        'period_days': days,
                        'start_date': start_date,
                        'end_date': datetime.now(),
                        'source': 'database',
                        'steps_completed': ['chat_info', 'database_check', 'existing_data_analysis']
                    }
            
            # –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö
            if progress_callback:
                await progress_callback("üìù –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...")
            
            test_data = await self._create_demo_data_with_progress(chat_id, chat_title, days, progress_callback)
            
            if progress_callback:
                await progress_callback("‚úÖ –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
            
            return {
                'chat_id': chat_id,
                'chat_title': chat_title,
                'messages_collected': test_data['messages_count'],
                'users_found': test_data['users_count'],
                'period_days': days,
                'start_date': start_date,
                'end_date': datetime.now(),
                'source': 'demo_data',
                'steps_completed': ['chat_info', 'database_check', 'demo_data_creation']
            }
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
            raise e
    
    def _create_demo_data(self, chat_id: int, chat_title: str, days: int) -> Dict:
        """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞"""
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        demo_users = [
            {'id': 123456789, 'name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', 'username': 'ivan_petrov'},
            {'id': 987654321, 'name': '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', 'username': 'maria_sidorova'},
            {'id': 555666777, 'name': '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', 'username': 'alex_kozlov'},
            {'id': 111222333, 'name': '–ï–ª–µ–Ω–∞ –í–æ—Ä–æ–±—å–µ–≤–∞', 'username': 'elena_vorobyeva'},
            {'id': 444555666, 'name': '–î–º–∏—Ç—Ä–∏–π –ù–æ–≤–∏–∫–æ–≤', 'username': 'dmitry_novikov'}
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        demo_messages = [
            "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö–∞–∫ –¥–µ–ª–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º?",
            "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –Ω–∞ 80%",
            "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É, –∫–æ–º–∞–Ω–¥–∞!",
            "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç?",
            "–ö –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º—É –¥–Ω—é —Ç–æ—á–Ω–æ —Å–¥–∞–º",
            "–û—Ç–ª–∏—á–Ω–æ! –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
            "–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–∏–∑–∞–π–Ω—É",
            "–î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –∑–∞–≤—Ç—Ä–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á–µ",
            "–°–æ–≥–ª–∞—Å–µ–Ω, –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏",
            "–í—Å—Ç—Ä–µ—á–∞ –≤ 15:00, –≤—Å–µ —Å–æ–≥–ª–∞—Å–Ω—ã?",
            "–î–∞, –ø–æ–¥—Ö–æ–¥–∏—Ç!",
            "–û—Ç–ª–∏—á–Ω–æ, —Ç–æ–≥–¥–∞ –¥–æ –≤—Å—Ç—Ä–µ—á–∏",
            "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
            "–ö–æ–Ω–µ—á–Ω–æ, –≤—Å–µ –≥–æ—Ç–æ–≤–æ",
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!"
        ]
        
        messages_count = 0
        users_count = len(demo_users)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
        for i, message_text in enumerate(demo_messages):
            user = demo_users[i % len(demo_users)]
            
            # –°–æ–∑–¥–∞–µ–º timestamp –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π
            message_date = datetime.now() - timedelta(days=days-1, hours=i)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.db.save_message(
                chat_id=chat_id,
                user_id=user['id'],
                message_id=1000000 + i,
                text=message_text,
                date=message_date,
                display_name=user['name']
            )
            messages_count += 1
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.db.update_user_activity(
                chat_id=chat_id,
                user_id=user['id'],
                display_name=user['name']
            )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        self.db.save_chat_info(
            chat_id=chat_id,
            title=chat_title,
            chat_type='supergroup',
            member_count=users_count
        )
        
        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {messages_count} –¥–µ–º–æ-—Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç {users_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        return {
            'messages_count': messages_count,
            'users_count': users_count
        }
        
    async def _create_demo_data_with_progress(self, chat_id: int, chat_title: str, days: int, progress_callback=None) -> Dict:
        """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        
        if progress_callback:
            await progress_callback("üë• –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        demo_users = [
            {'id': 123456789, 'name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', 'username': 'ivan_petrov'},
            {'id': 987654321, 'name': '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', 'username': 'maria_sidorova'},
            {'id': 555666777, 'name': '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', 'username': 'alex_kozlov'},
            {'id': 111222333, 'name': '–ï–ª–µ–Ω–∞ –í–æ—Ä–æ–±—å–µ–≤–∞', 'username': 'elena_vorobyeva'},
            {'id': 444555666, 'name': '–î–º–∏—Ç—Ä–∏–π –ù–æ–≤–∏–∫–æ–≤', 'username': 'dmitry_novikov'}
        ]
        
        if progress_callback:
            await progress_callback("üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        demo_messages = [
            "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö–∞–∫ –¥–µ–ª–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º?",
            "–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –Ω–∞ 80%",
            "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É, –∫–æ–º–∞–Ω–¥–∞!",
            "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç?",
            "–ö –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º—É –¥–Ω—é —Ç–æ—á–Ω–æ —Å–¥–∞–º",
            "–û—Ç–ª–∏—á–Ω–æ! –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
            "–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–∏–∑–∞–π–Ω—É",
            "–î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –∑–∞–≤—Ç—Ä–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á–µ",
            "–°–æ–≥–ª–∞—Å–µ–Ω, –Ω—É–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏",
            "–í—Å—Ç—Ä–µ—á–∞ –≤ 15:00, –≤—Å–µ —Å–æ–≥–ª–∞—Å–Ω—ã?",
            "–î–∞, –ø–æ–¥—Ö–æ–¥–∏—Ç!",
            "–û—Ç–ª–∏—á–Ω–æ, —Ç–æ–≥–¥–∞ –¥–æ –≤—Å—Ç—Ä–µ—á–∏",
            "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
            "–ö–æ–Ω–µ—á–Ω–æ, –≤—Å–µ –≥–æ—Ç–æ–≤–æ",
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!"
        ]
        
        messages_count = 0
        users_count = len(demo_users)
        
        if progress_callback:
            await progress_callback("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
        for i, message_text in enumerate(demo_messages):
            user = demo_users[i % len(demo_users)]
            
            # –°–æ–∑–¥–∞–µ–º timestamp –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π
            message_date = datetime.now() - timedelta(days=days-1, hours=i)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.db.save_message(
                chat_id=chat_id,
                user_id=user['id'],
                message_id=1000000 + i,
                text=message_text,
                date=message_date,
                display_name=user['name']
            )
            messages_count += 1
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.db.update_user_activity(
                chat_id=chat_id,
                user_id=user['id'],
                display_name=user['name']
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
            if i % 5 == 0 and progress_callback:
                await progress_callback(f"üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {i+1}/{len(demo_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        self.db.save_chat_info(
            chat_id=chat_id,
            title=chat_title,
            chat_type='supergroup',
            member_count=users_count
        )
        
        if progress_callback:
            await progress_callback(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {messages_count} –¥–µ–º–æ-—Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç {users_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        
        return {
            'messages_count': messages_count,
            'users_count': users_count
        }
