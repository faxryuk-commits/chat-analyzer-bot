#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å ngrok –¥–ª—è HTTPS
"""

import subprocess
import time
import requests
import json
import os
from threading import Thread

def check_ngrok():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ ngrok"""
    try:
        result = subprocess.run(['ngrok', 'version'], capture_output=True, text=True)
        return result.returncode == 0
    except FileNotFoundError:
        return False

def install_ngrok():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ngrok"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ngrok...")
    
    # –î–ª—è macOS
    if os.name == 'posix':
        try:
            subprocess.run(['brew', 'install', 'ngrok'], check=True)
            print("‚úÖ ngrok —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Homebrew")
            return True
        except subprocess.CalledProcessError:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ngrok —á–µ—Ä–µ–∑ Homebrew")
            print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ngrok –≤—Ä—É—á–Ω—É—é: https://ngrok.com/download")
            return False

def get_ngrok_url():
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π URL –æ—Ç ngrok"""
    try:
        response = requests.get('http://localhost:4040/api/tunnels')
        tunnels = response.json()['tunnels']
        for tunnel in tunnels:
            if tunnel['proto'] == 'https':
                return tunnel['public_url']
    except:
        pass
    return None

def start_ngrok():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç ngrok"""
    print("üöÄ –ó–∞–ø—É—Å–∫ ngrok...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok –≤ —Ñ–æ–Ω–µ
    ngrok_process = subprocess.Popen(
        ['ngrok', 'http', '8080'],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE
    )
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    time.sleep(3)
    
    # –ü–æ–ª—É—á–∞–µ–º URL
    url = get_ngrok_url()
    if url:
        print(f"üåê Ngrok URL: {url}")
        return url, ngrok_process
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ngrok URL")
        ngrok_process.terminate()
        return None, None

def update_bot_url(url):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç URL –≤ –±–æ—Ç–µ"""
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –≤ –±–æ—Ç–µ: {url}")
    
    # –ó–∞–º–µ–Ω—è–µ–º URL –≤ webhook_server.py
    with open('webhook_server.py', 'r') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ localhost URL –Ω–∞ ngrok URL
    content = content.replace('http://localhost:8080', url)
    
    with open('webhook_server.py', 'w') as f:
        f.write(content)
    
    print("‚úÖ URL –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–æ—Ç–µ")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ Chat Analyzer Bot - –ó–∞–ø—É—Å–∫ —Å ngrok")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok
    if not check_ngrok():
        print("‚ùå ngrok –Ω–µ –Ω–∞–π–¥–µ–Ω")
        if install_ngrok():
            print("‚úÖ ngrok —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ngrok")
            return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º ngrok
    url, ngrok_process = start_ngrok()
    if not url:
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º URL –≤ –±–æ—Ç–µ
    update_bot_url(url)
    
    print("\nüéØ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
    print("python3 webhook_server.py")
    print("\nüì± –í Telegram –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
    print(f"üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: {url}")
    
    try:
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        ngrok_process.wait()
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞...")
        ngrok_process.terminate()
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL
        with open('webhook_server.py', 'r') as f:
            content = f.read()
        content = content.replace(url, 'http://localhost:8080')
        with open('webhook_server.py', 'w') as f:
            f.write(content)
        
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π URL –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == '__main__':
    main()
